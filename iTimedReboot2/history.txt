iTimedReboot2

  v0.5:
		added some more logging /see g_extraLogging...
		moved g_stRebootDateTime update from TimeReboot() to WriteLastBootDate()
		added szApplicationNameAndVersion to text in window to show version number
		
  v0.4:
		in int TimedReboot(void)
		...
			wsprintf(g_LastBootDate, L"%04i%02i%02i", g_stLastBootDateTime.wYear, g_stLastBootDateTime.wMonth, g_stLastBootDateTime.wDay);
		//	g_stRebootDateTime holds time as read by registry
			//	+ needs to be updated as used for diff calculating, if there is no reboot (which would read the reg with new value)
			g_stRebootDateTime=g_stLastBootDateTime;
			writeLastBootDate(g_stLastBootDateTime);
		release r83
      
	v0.3:
		TODO: add day param to enable 24h, 48h, 7 days intervals
			DONE
			added new regsitry entry and changed TimedReboot to look for days too
		TODO: add randomize function within given time frame
			DONE
			the random part will be added when the tool starts
			the next boot will be displayed on screen
	v0.2:
		added a resource string for WindowClassName as other app TaskbarAddon4 relies on the Class Name
		changed 
			LoadString(hInstance, IDC_iTimedReboot2, szWindowClass, MAX_LOADSTRING); 
		to
			LoadString(hInstance, IDS_WINDOWCLASSNAME, szWindowClass, MAX_LOADSTRING);
	v0.1:
		initial release with functional changes based on iTimedReboot
			